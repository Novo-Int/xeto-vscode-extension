{
	"name": "pog-extension",
	"description": "A pog extension",
	"displayName": "Pog",
	"license": "MIT",
	"version": "0.1.12",
	"categories": [],
	"keywords": [
		"multi-root ready"
	],
	"publisher": "novo-studio",
	"repository": {
		"url": "https://github.com/Novo-Int/pog-vscode-extension"
	},
	"engines": {
		"vscode": "^1.73.0"
	},
	"activationEvents": [
		"onLanguage:plaintext"
	],
	"main": "./client/out/extension",
	"contributes": {
		"languages": [
			{
				"id": "pog",
				"extensions": [
					".pog"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "pog",
				"scopeName": "source.pog",
				"path": "./syntaxes/pog.tmLanguage.json"
			}
		],
		"configuration": {
			"type": "object",
			"title": "POG",
			"properties": {
				"pog.libraries.sys": {
					"type": "string",
					"default": "3eb1ce1326f7caa7a8162a36fc326e2e66e1abc6",
					"markdownDescription": "Specifies the GIT **sha** for the desired version of sys libraries. The content of the libraries will be download from GH based on the provided **sha**."
				},
				"pog.libraries.external": {
					"type": "array",
					"default": [],
					"markdownDescription": "A list of locations for external libraries.\nThe entries can be either: \n* strings\n   * this needs to be a path to the local file system that vscode can access\n  * if the folder contains a **lib.pog** file then it is treated as a single library\n  * if **lib.pog** is missing, then each folder (just one level deep) is searched and considered a lib if **lib.pog** exists\n  * anything else is ignored\n* an object that describes the desired library. This is mostly used for **URLs**. The object should have the following structure\n   * **name**: name of the lib\n   * **lib**: URL path to **lib.pog** file. Version and docs will be read from this\n   * **files**: a string array with the URL to all the files of the lib\n\n Example of a lib entry: \n \n{\n \"name\": \"fakelib\",\n \"lib\": \"https://ex.com/fakelib/lib.pog\",\n  \"files\": [\n   \"https://ex.com/fakelib/meta.pog\"\n   \"https://ex.com/fakelib/tags.pog\"\n ]\n}\n \nIn case of name clashing libraries at **the top** of the array take precedence over libraries of the same name but **lower** in the array."
				}
			}
		},
		"configurationDefaults": {
			"[pog]": {
				"editor.semanticHighlighting.enabled": true
			},
			"editor.semanticTokenColorCustomizations": {
				"enabled": true,
                "rules": {
                    "label": {
						"foreground": "#0cd319",
						"bold": true,
						"underline": true
					}
                }
            }
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -b",
		"watch": "tsc -b -w",
		"lint": "eslint ./client/src ./server/src --ext .ts,.tsx",
		"postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
		"test": "sh ./scripts/e2e.sh",
		"deploy": "vsce publish"
	},
	"devDependencies": {
		"@types/mocha": "^9.1.0",
		"@types/node": "^16.18.3",
		"@typescript-eslint/eslint-plugin": "^5.42.0",
		"@typescript-eslint/parser": "^5.42.0",
		"@vscode/vsce": "^2.16.0",
		"eslint": "^8.26.0",
		"mocha": "^9.2.1",
		"typescript": "^4.8.4"
	}
}
